[comment encoding = UTF-8 /]
[module commonPageJsFile('http://www.obeonetwork.org/dsl/application/1.0.0')/]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsUtils /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsDirectoryPath /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsFilePath /]

[template public genCommonPage(aConfiguration : Configuration) {
		This : String = genCommonPageIdent();
		App : String = genAppIdent();
		CommonEvents : String = genCommonEventsIdent();
		AccountNav : String = genJsAccountNavIdent();
		LogManager : String = genLogManagerIdent();

		objectEClasses : OrderedSet(ecore::EClass) = aConfiguration.ecoreModel.eClassifiers->filter(EClass);
		AppPath : String = genAppFileRPath();
		CommonEventsPath : String = genCommonEventsFileRPath();
		AccountNavPath : String = genJsAccountNavFileRPath();
		LogManagerPath : String = genLogManagerFileRPath();
}]
[file (genJsFullPath(genCommonPageFileRPath()), false, 'UTF-8')]
[genJsCopyrightHeader()/]

[genJsHeader('0.4.0')/]
[let AdditionalPaths : Sequence(String) = objectEClasses.genJsEditObjectFileRPath()->union(objectEClasses.genJsObjectPopupFileRPath())]
[let AdditionalIdents : Sequence(String) = objectEClasses.genJsEditObjectIdent()->union(objectEClasses.genJsObjectPopupIdent())]
[genAMDHeader(
	Sequence{AppPath, CommonEventsPath, AccountNavPath, LogManagerPath}->union(AdditionalPaths), 
	Sequence{App, CommonEvents, AccountNav, LogManager}->union(AdditionalIdents)
)/]
[/let]
[/let]

	
	var [This/] = {};
	var oldView = undefined;
	var view[AccountNav/] = undefined;
	
	/**/
	function _init() {
		
		[CommonEvents/].start();
	}

	/**/
	[This/].start = function() {
		
		_init();
	};
	
	/**/
	[This/].renderDefault = function() {
		
		$(".page").attr('id', 'default');
		_renderDefault();
		_renderLoaded();
	};
	
	/**/
	[This/].renderUserFeatures = function() {
		
		$(".page").attr('id', 'sign-in');
		_renderUserFeatures();
		_renderLoaded();
	};
	
	/**/
	[This/].renderModeratorFeatures = function() {
		
		$(".page").attr('id', 'moderator');
		_renderModeratorFeatures();
		_renderLoaded();
	};
	
	/**/
	[This/].renderAdminFeatures = function() {
		
		$(".page").attr('id', 'admin');
		_renderAdminFeatures();
		_renderLoaded();
	};
	
	function _clean() {
		if(view[AccountNav/]!=undefined) {
			view[AccountNav/].remove();
		}
	}

	//
	function _renderDefault() {
		_clean();
		[App/].toast.warning("You need to sign in.");
	}
	
	//
	function _renderUserFeatures() {
		
		/*[App/].[genAccountManagerIdent()/].async_myAccount(function(account) {
			$(".account .caret").before(" "+account.nickname);
			view[AccountNav/] = [AccountNav/].create();
			view[AccountNav/].appendTo("ul.account");
		}, [LogManager/].getToken());*/
		
	}
	
	//
	function _renderModeratorFeatures() {
		
		_renderUserFeatures();
	}
	
	//
	function _renderAdminFeatures(){
		
		_renderModeratorFeatures();
	}
	
	/* Modal */
	[for (ObjectEClass : ecore::EClass | objectEClasses)]

	[This/].showEditModal[ObjectEClass.toTypeIdent()/] = function([ObjectEClass.toVarIdent()/][for (attributeVar : String | ObjectEClass.eAllReferences.eType.toVarIdent())], [attributeVar/]Proxies[/for]) {
		_insertView([ObjectEClass.genJsEditObjectIdent()/].create([ObjectEClass.toVarIdent()/][for (attributeVar : String | ObjectEClass.eAllReferences.eType.toVarIdent())], [attributeVar/]Proxies[/for]));
	};

	[This/].showModal[ObjectEClass.toTypeIdent()/] = function([ObjectEClass.toVarIdent()/]) {
		_insertView([ObjectEClass.genJsObjectPopupIdent()/].create([ObjectEClass.toVarIdent()/]));
	};
	[/for]
	
	/**/
	[This/].hideModal = function() {
		
		_cleanView();
	};
	
	[This/].renderOnline = function() {
		$("#status").removeClass('offline');
		$("#status").addClass('online');
		$("#status").text('online');
	};
	
	[This/].renderOffline = function() {
		$("#status").removeClass('online');
		$("#status").addClass('offline');
		$("#status").text('offline');
	};

	//
	function _renderLoaded() {
		$("body").addClass("loaded");
	}
	
	//
	function _insertView(view) {
		
		_cleanView();
		oldView = view;
		view.appendTo("body");
	}
	
	//
	function _cleanView() {
		
		if(oldView != undefined) {
			oldView.remove();
		}
	}
	
[genAMDFooter(This)/]
[/file]
[/template]
