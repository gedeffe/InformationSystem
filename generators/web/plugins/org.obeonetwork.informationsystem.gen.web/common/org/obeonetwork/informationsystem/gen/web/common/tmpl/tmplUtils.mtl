[comment encoding = UTF-8 /]
[module tmplUtils('http://www.obeonetwork.org/dsl/application/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore')]

[import org::obeonetwork::informationsystem::gen::web::common::utils /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsUtils /]

[comment 
	The Html copyright header.
/]
[template public genHtmlCopyrightHeader(oclAny : OclAny) post (trim())]
<!--
[genJsCopyrightHeader()/]
-->
[/template]

[comment 
	The Tmpl default header with autor and since.
/]
[template public genTmplHeader(anEClass: EClass, since : String)][genTmplHeader(anEClass, genCurrentVersion(), since)/][/template]

[comment 
	The Tmpl default header with autor, version and since.
/]
[template public genTmplHeader(anEClass: EClass, version : String, since : String)]
<!--
	@autor hugo.marchadour@obeo.fr
	@version [version/]
	@since [since/]
	
	Ember.View
	@param {model.[anEClass.toTypeIdent()/]} [anEClass.toVarIdent()/]
	@generated
-->
[/template]

[template public genTmplHeader(version : String)][genTmplHeader(version, version)/][/template]

[template public genTmplHeader(version : String, since : String)]
<!--
	@autor hugo.marchadour@obeo.fr
	@version [version/]
	@since [since/]
	
	Ember.View
	@generated
-->
[/template]

[comment 
	The Tmpl script signature wrapper.
/]
[template public wrapScriptSign(templateIdent : String, templateContent : String)]
<script type="text/x-handlebars" data-template-name="[templateIdent/]">
	<!-- [protected (templateIdent.concat(' -->'))]
	[templateContent/]
	<!-- [/protected] -->
</script>
[/template]


[comment 
	The Tmpl script signature wrapper.
/]
[template public genTmplDisplayFeature(anEClass: EClass, aStrucFeature : EStructuralFeature) ]
<!-- The generation of [anEClass.name/] with the feature [aStrucFeature.eClass().name/]([aStrucFeature.eType.name/]) should have been handled -->
[/template]

[template public genTmplDisplayFeature(anEClass: EClass, anAttribute: EAttribute) ]
[if (anAttribute.eType.instanceClassName.equalsIgnoreCase('java.lang.String'))]
	<li>{{[anEClass.name.toLowerFirst()/].[anAttribute.name/]}}</li>
[else]
	<li>[anAttribute.name/] : {{[anEClass.name.toLowerFirst()/].[anAttribute.name/]}}</li>
[/if]
[/template]

[template public genTmplDisplayFeature(anEClass: EClass, aReference : EReference) ? (aReference.eType.oclIsKindOf(EClass))
{
	contextName: String = anEClass.name.toLowerFirst();
	referenceType : String = aReference.eType.name.toLowerFirst();
}]
[if (aReference.many)]
{{#if [contextName/].[referenceType/]Proxies}}
<li>
	[aReference.name.toUpperFirst()/] :
	<ul>
	{{#each [referenceType/]Proxy in [contextName/].[referenceType/]Proxies}}
		<li>
			<a {{action "[referenceType/]Link" context="[referenceType/]Proxy"}} href="#" class="[referenceType/]-link">{{[referenceType/]Proxy.desc}} ({{[referenceType/]Proxy.id}})</a>
		</li>
	{{/each}}
	</ul>
</li>
{{/if}}
[else]
{{#if [contextName/].[referenceType/]Proxy}}
<li>
	[aReference.name.toUpperFirst()/] :
	<a {{action "[referenceType/]Link" context="[contextName/].[referenceType/]Proxy"}} href="#" class="[referenceType/]-link">{{[contextName/].[referenceType/]Proxy.desc}} ({{[contextName/].[referenceType/]Proxy.id}})</a>
</li>
{{/if}}
[/if]
[/template]

[template public genTitle(anEClass : EClass) post (trim()){ 
	contextName : String = anEClass.toVarIdent();
}]
[let attribute : String = anEClass.eAllAttributes->select(eType.instanceClassName.equalsIgnoreCase('java.lang.String'))->at(1).toVarIdent() ]
	{{[contextName/].[attribute/]}}
[/let]
[/template]

[query public toVarIdent(ident : String) : String = ident.toLowerFirst() /]
[query public toVarIdent(aENamedElem : ENamedElement) : String = aENamedElem.name.toVarIdent() /]

[query public toTypeIdent(ident : String) : String = ident.toUpperFirst() /]
[query public toTypeIdent(aENamedElem : ENamedElement) : String = aENamedElem.name.toTypeIdent() /]
