[comment encoding = UTF-8 /]
[module viewUtilTestJsFile('http://www.obeonetwork.org/dsl/application/1.0.0', 'http://www.eclipse.org/emf/2002/Ecore')/]
[import org::obeonetwork::informationsystem::gen::web::common::utils /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsUtils /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsDirectoryPath /]
[import org::obeonetwork::informationsystem::gen::web::common::js::jsFilePath /]
[import org::obeonetwork::informationsystem::gen::web::common::js::testFilePath /]
[import org::obeonetwork::informationsystem::gen::web::common::tmpl::tmplFilePath /]

[template public genViewUtilTest(aConfig : Configuration) {
		UnderTest : String = genViewUtilIdent();
		UnderPath : String = genViewUtilFileRPath();
		Jasmine : String = genJasmineIdent();
		Ember : String = genEmberIdent();
}]
[file (genJsFullPath(genViewUtilTestFileRPath()), false, 'UTF-8')]
[genJsCopyrightHeader()/]

[genJsHeader('1.0.0')/]

[genAMDHeader(
	Sequence{UnderPath}, 
	Sequence{Jasmine, Ember}, 
	Sequence{UnderTest}
)/]

	describe("[UnderTest/] test", function() {

		beforeEach(function() {

		});

		describe("_extractTemplateName(path)", function() {
			it("works with a relative path", function() {
				var name = 'sample';
				var path = 'samplePath/' + name;
				expect([UnderTest/]._extractTemplateName(path)).toBe(name);
			});
	
			it("works with an absolute path", function() {
				var name = 'sample';
				var path = '/samplePath/' + name;
				expect([UnderTest/]._extractTemplateName(path)).toBe(name);
			});
	
			it("works with a small path", function() {
				var name = 'sample';
				var path = '' + name;
				expect([UnderTest/]._extractTemplateName(path)).toBe(name);
			});
		});

		describe("loadWidgetTemplate(path)", function() {

			it("does not store anything with a wrong path", function() {
				var name = 'wrongName';
				var path = 'wrongPath/' + name;
				[UnderTest/].loadWidgetTemplate(path);
				expect(Em.TEMPLATES['['/]name[']'/]).toBeUndefined();
			});
	
			[for (objectFilePath : String | reqAllFilePaths( aConfig.ecoreModel.eClassifiers->filter(EClass)->asSet() ))]
			it("stores [objectFilePath/] template", function() {
				var path = '[objectFilePath/]';
				var name = [UnderTest/]._extractTemplateName(path);
				expect(Em.TEMPLATES['['/]name[']'/]).toBeUndefined();
				[UnderTest/].loadWidgetTemplate(path);
				expect(Em.TEMPLATES['['/]name[']'/]).toBeDefined();
			});

			[/for]
		});
	});

});
[/file]
[/template]

[query private reqAllFilePaths(eClasses : Set(EClass)) : Sequence(String) = 
eClasses.genTmplNewObjectFilePath()->asSet()
	->union(eClasses.genTmplObjectListFilePath()->asSet())
		->union(eClasses.genTmplStatsFilePath()->asSet())
			->union(eClasses.genTmplEditObjectPopupFilePath()->asSet())
				->union(eClasses.genTmplObjectPopupFilePath()->asSet())
						->union(Set{
							genTmplPaginationFilePath(),
							genTmplAccountNavFilePath()
						})->asSequence()
/]

